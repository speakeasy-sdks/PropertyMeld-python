"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import contact as shared_contact
from ..shared import notificationsettings as shared_notificationsettings
from dataclasses_json import Undefined, dataclass_json
from meldapi import utils
from typing import Any, Optional


@dataclasses.dataclass
class PatchedResidentInput1:
    
    address: Optional[Any] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'address', 'json': True }, 'multipart_form': { 'field_name': 'address', 'json': True }})
    contact: Optional[shared_contact.Contact] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'contact', 'json': True }, 'multipart_form': { 'field_name': 'contact', 'json': True }})
    first_name: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'first_name' }, 'multipart_form': { 'field_name': 'first_name' }})
    invite: Optional[bool] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'invite' }, 'multipart_form': { 'field_name': 'invite' }})
    r"""Send an invite to the resident to access PropertyMeld"""
    last_name: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'last_name' }, 'multipart_form': { 'field_name': 'last_name' }})
    middle_name: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'middle_name' }, 'multipart_form': { 'field_name': 'middle_name' }})
    notes: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'notes' }, 'multipart_form': { 'field_name': 'notes' }})
    notification_settings: Optional[shared_notificationsettings.NotificationSettingsInput] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'notification_settings', 'json': True }, 'multipart_form': { 'field_name': 'notification_settings', 'json': True }})
    units: Optional[list[int]] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'units' }, 'multipart_form': { 'field_name': 'units' }})
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PatchedResidentAddress:
    
    city: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('city') }})
    county_province: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('county_province') }})
    line_1: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('line_1') }})
    postcode: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('postcode') }})
    country: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country'), 'exclude': lambda f: f is None }})
    line_2: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('line_2'), 'exclude': lambda f: f is None }})
    line_3: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('line_3'), 'exclude': lambda f: f is None }})
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PatchedResidentInput:
    
    address: Optional[PatchedResidentAddress] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address'), 'exclude': lambda f: f is None }})
    contact: Optional[shared_contact.Contact] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contact'), 'exclude': lambda f: f is None }})
    first_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('first_name'), 'exclude': lambda f: f is None }})
    invite: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invite'), 'exclude': lambda f: f is None }})
    r"""Send an invite to the resident to access PropertyMeld"""
    last_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('last_name'), 'exclude': lambda f: f is None }})
    middle_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('middle_name'), 'exclude': lambda f: f is None }})
    notes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notes'), 'exclude': lambda f: f is None }})
    notification_settings: Optional[shared_notificationsettings.NotificationSettingsInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notification_settings'), 'exclude': lambda f: f is None }})
    units: Optional[list[int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('units'), 'exclude': lambda f: f is None }})
    