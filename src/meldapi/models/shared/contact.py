"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from meldapi import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Contact:
    
    business_phone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('business_phone'), 'exclude': lambda f: f is None }})
    r"""Home phone number. Must be in E.164 format, e.g. '+14155552671'."""
    business_phone_ext: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('business_phone_ext'), 'exclude': lambda f: f is None }})
    cell_phone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cell_phone'), 'exclude': lambda f: f is None }})
    r"""Home phone number. Must be in E.164 format, e.g. '+14155552671'."""
    cell_phone_ext: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cell_phone_ext'), 'exclude': lambda f: f is None }})
    fax: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fax'), 'exclude': lambda f: f is None }})
    home_phone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('home_phone'), 'exclude': lambda f: f is None }})
    r"""Home phone number. Must be in E.164 format, e.g. '+14155552671'."""
    home_phone_ext: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('home_phone_ext'), 'exclude': lambda f: f is None }})
    primary_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('primary_email'), 'exclude': lambda f: f is None }})
    secondary_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('secondary_email'), 'exclude': lambda f: f is None }})
    tertiary_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tertiary_email'), 'exclude': lambda f: f is None }})
    