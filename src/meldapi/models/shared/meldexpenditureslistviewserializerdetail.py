"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import meldexpenditureslistlineitem as shared_meldexpenditureslistlineitem
from ..shared import meldexpenditureslistmeld as shared_meldexpenditureslistmeld
from ..shared import statusd0benum as shared_statusd0benum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from meldapi import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MeldExpendituresListViewSerializerDetail:
    
    amount: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount') }})
    created: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    expenditures_line_items: list[shared_meldexpenditureslistlineitem.MeldExpendituresListLineItem] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expenditures_line_items') }})
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    meld: shared_meldexpenditureslistmeld.MeldExpendituresListMeld = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('meld') }})
    updated: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updated'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    notes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notes'), 'exclude': lambda f: f is None }})
    status: Optional[shared_statusd0benum.StatusD0bEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    